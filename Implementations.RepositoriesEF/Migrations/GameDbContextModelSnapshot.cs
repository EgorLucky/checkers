// <auto-generated />
using System;
using Implementations.RepositoriesEF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Implementations.RepositoriesEF.Migrations
{
    [DbContext(typeof(GameDbContext))]
    partial class GameDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Implementations.RepositoriesEF.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("AwaitableMove")
                        .HasColumnType("integer");

                    b.Property<string>("CheckerCellColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("FinishDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FirstPlayerBoardSide")
                        .HasColumnType("integer");

                    b.Property<string>("FirstPlayerCheckerColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NonPlayableCellColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OpponentCheckerColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SecondPlayerBoardSide")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("StartDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("State")
                        .HasColumnType("integer");

                    b.Property<int?>("Winner")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Implementations.RepositoriesEF.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Implementations.RepositoriesEF.Player", b =>
                {
                    b.HasOne("Implementations.RepositoriesEF.Game", "Game")
                        .WithMany("Players")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Implementations.RepositoriesEF.Game", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
